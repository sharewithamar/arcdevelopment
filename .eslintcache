[{"G:\\React-zachary\\arcdevelopment\\src\\index.js":"1","G:\\React-zachary\\arcdevelopment\\src\\reportWebVitals.js":"2","G:\\React-zachary\\arcdevelopment\\src\\components\\App.js":"3","G:\\React-zachary\\arcdevelopment\\src\\components\\ui\\Header.js":"4","G:\\React-zachary\\arcdevelopment\\src\\components\\ui\\Theme.js":"5"},{"size":427,"mtime":1609342543727,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607355611677,"results":"8","hashOfConfig":"7"},{"size":1321,"mtime":1609753156435,"results":"9","hashOfConfig":"7"},{"size":15158,"mtime":1609858235816,"results":"10","hashOfConfig":"7"},{"size":653,"mtime":1609752020523,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8i3466",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\React-zachary\\arcdevelopment\\src\\index.js",[],"G:\\React-zachary\\arcdevelopment\\src\\reportWebVitals.js",[],"G:\\React-zachary\\arcdevelopment\\src\\components\\App.js",["24"],"import React from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport theme from './ui/Theme';\nimport Header from '../components/ui/Header';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={() => <div>Home</div>} />\n          <Route exact path=\"/services\" component={() => <div>Services</div>} />\n          <Route\n            exact\n            path=\"/customsofware\"\n            component={() => <div>custom sofware</div>}\n          />\n          <Route\n            exact\n            path=\"/mobileapps\"\n            component={() => <div>Mobile apps</div>}\n          />\n          <Route exact path=\"/websites\" component={() => <div>websites</div>} />\n          <Route\n            exact\n            path=\"/revolution\"\n            component={() => <div>Revolution</div>}\n          />\n          <Route exact path=\"/about\" component={() => <div>about us</div>} />\n          <Route exact path=\"/contact\" component={() => <div>contact</div>} />\n          <Route exact path=\"/estimate\" component={() => <div>estimate</div>} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","G:\\React-zachary\\arcdevelopment\\src\\components\\ui\\Header.js",["25","26"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\nimport logo from '../../assets/logo.svg';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { IconButton } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: '3em',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginBottom: '2em',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: '1.25em',\r\n    },\r\n  },\r\n  logo: {\r\n    height: '8em',\r\n    [theme.breakpoints.down('md')]: {\r\n      height: '7em',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '5.5em',\r\n    },\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  tabContainer: {\r\n    marginLeft: 'auto',\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: '25px',\r\n  },\r\n  button: {\r\n    ...theme.typography.estimate,\r\n    borderRadius: '50px',\r\n    marginLeft: '50px',\r\n    marginRight: '25px',\r\n    height: '45px',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    '&:active': {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n  menu: {\r\n    backgroundColor: theme.palette.common.blue,\r\n    color: 'white',\r\n    borderRadius: 0,\r\n  },\r\n  menuItem: {\r\n    ...theme.typography.tab,\r\n    opacity: 0.7,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  drawerIcon: {\r\n    height: '50px',\r\n    width: '50px',\r\n  },\r\n  drawerIconContainer: {\r\n    marginLeft: 'auto',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  drawer: {\r\n    backgroundColor: theme.palette.common.blue,\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    color: 'white',\r\n    opacity: 0.7,\r\n  },\r\n  drawerItemEstimate: {\r\n    backgroundColor: theme.palette.common.orange,\r\n  },\r\n  drawerItemSelected: {\r\n    '& .MuiListItemText-root': {\r\n      opacity: 1,\r\n    },\r\n    // opacity: 1,\r\n  },\r\n  appbar: {\r\n    zIndex: theme.zIndex.modal + 1,\r\n  },\r\n}));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [selectedIndex, setselectedIndex] = useState(0);\r\n\r\n  //const location = useLocation();\r\n\r\n  const handleChange = (e, newValue) => {\r\n    console.log('newValue', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleMenuItemclick = (e, index) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    setselectedIndex(index);\r\n  };\r\n  const menuOptions = [\r\n    { name: 'Services', link: '/services', activeIndex: 1, selectedIndex: 0 },\r\n    {\r\n      name: 'Custom Software Development',\r\n      link: '/customsoftware',\r\n      activeIndex: 1,\r\n      selectedIndex: 1,\r\n    },\r\n    {\r\n      name: 'iOS/Android App Development',\r\n      link: '/mobileapps',\r\n      activeIndex: 1,\r\n      selectedIndex: 2,\r\n    },\r\n    {\r\n      name: 'Website Development',\r\n      link: '/websites',\r\n      activeIndex: 1,\r\n      selectedIndex: 3,\r\n    },\r\n  ];\r\n\r\n  const routes = [\r\n    { name: 'Home', link: '/', activeIndex: 0 },\r\n    {\r\n      name: 'Services',\r\n      link: '/services',\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? 'simple-menu' : undefined,\r\n      ariaPopup: anchorEl ? 'true' : undefined,\r\n      mouseOver: (event) => handleClick(event),\r\n    },\r\n    { name: 'The Revolution', link: '/revolution', activeIndex: 2 },\r\n    { name: 'About Us', link: '/about', activeIndex: 3 },\r\n    { name: 'Contact Us', link: '/contact', activeIndex: 4 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.log('render value', value);\r\n    // or location.pathname\r\n    [...menuOptions, ...routes].forEach((route) => {\r\n      switch (window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (value !== route.activeIndex) {\r\n            setValue(route.activeIndex);\r\n            if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\r\n              selectedIndex(route.selectedIndex);\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    /*     switch (window.location.pathname) {\r\n      case '/':\r\n        if (value !== 0) {\r\n          setValue(0);\r\n        }\r\n        break;\r\n      case '/services':\r\n        if (value !== 1) {\r\n          setValue(1);\r\n          setselectedIndex(0);\r\n        }\r\n        break;\r\n      case '/customsofware':\r\n        if (value !== 1) {\r\n          setValue(1);\r\n          setselectedIndex(1);\r\n        }\r\n        break;\r\n      case '/mobileapps':\r\n        if (value !== 1) {\r\n          setValue(1);\r\n          setselectedIndex(2);\r\n        }\r\n        break;\r\n      case '/websites':\r\n        if (value !== 1) {\r\n          setValue(1);\r\n          setselectedIndex(3);\r\n        }\r\n        break;\r\n      case '/revolution':\r\n        if (value !== 2) {\r\n          setValue(2);\r\n        }\r\n        break;\r\n      case '/about':\r\n        if (value !== 3) {\r\n          setValue(3);\r\n        }\r\n        break;\r\n      case '/contact':\r\n        if (value !== 4) {\r\n          setValue(4);\r\n        }\r\n        break;\r\n      case '/estimate':\r\n        if (value !== 5) {\r\n          setValue(5);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    } */\r\n    console.log('render value set', value);\r\n  }, [value, menuOptions, selectedIndex, routes]);\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.tabContainer}\r\n        indicatorColor=\"primary\"\r\n      >\r\n        {routes.map((route, index) => (\r\n          <Tab\r\n            key={`${route}${index}`}\r\n            className={classes.tab}\r\n            component={Link}\r\n            to={route.link}\r\n            label={route.name}\r\n            aria-owns={route.ariaOwns}\r\n            aria-haspopup={route.ariaPopup}\r\n            onMouseOver={route.mouseOver}\r\n          />\r\n        ))}\r\n      </Tabs>\r\n      {/* <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n        <Tab\r\n          aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n          aria-haspopup={anchorEl ? 'true' : undefined}\r\n          className={classes.tab}\r\n          component={Link}\r\n          onMouseOver={(event) => handleClick(event)}\r\n          to=\"/services\"\r\n          label=\"Services\"\r\n        />\r\n        <Tab\r\n          className={classes.tab}\r\n          component={Link}\r\n          to=\"/revolution\"\r\n          label=\"The Revolution\"\r\n        />\r\n        <Tab\r\n          className={classes.tab}\r\n          component={Link}\r\n          to=\"/about\"\r\n          label=\"About Us\"\r\n        />\r\n        <Tab\r\n          className={classes.tab}\r\n          component={Link}\r\n          to=\"/contact\"\r\n          label=\"Contact Us\"\r\n        /> */}\r\n      <Button\r\n        variant=\"contained\"\r\n        component={Link}\r\n        to=\"/estimate\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n        onClick={() => setValue(false)}\r\n      >\r\n        Free Estimate\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        MenuListProps={{ onMouseLeave: handleClose }}\r\n        classes={{ paper: classes.menu }}\r\n        elevation={0}\r\n        style={{ zIndex: 1302 }}\r\n        keepMounted\r\n      >\r\n        {menuOptions.map((option, index) => (\r\n          <MenuItem\r\n            key={`${option}${index}`}\r\n            onClick={(event) => {\r\n              handleMenuItemclick(event, index);\r\n              setValue(1);\r\n              handleClose();\r\n            }}\r\n            selected={index === selectedIndex && value === 1}\r\n            component={Link}\r\n            to={option.link}\r\n            classes={{ root: classes.menuItem }}\r\n          >\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        classes={{\r\n          paper: classes.drawer,\r\n        }}\r\n      >\r\n        <div className={classes.toolbarMargin} />\r\n        <List disablePadding>\r\n          {routes.map((route) => (\r\n            <ListItem\r\n              divider\r\n              key={`${route}${route.activeIndex}`}\r\n              button\r\n              component={Link}\r\n              to={route.link}\r\n              selected={value === route.activeIndex}\r\n              classes={{ selected: classes.drawerItemSelected }}\r\n              onClick={() => {\r\n                setOpenDrawer(false);\r\n                setValue(route.activeIndex);\r\n              }}\r\n            >\r\n              <ListItemText className={classes.drawerItem} disableTypography>\r\n                {route.name}\r\n              </ListItemText>\r\n            </ListItem>\r\n          ))}\r\n          {/* <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(0);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/\"\r\n            selected={value === 0}\r\n          >\r\n            <ListItemText\r\n              className={\r\n                value === 0\r\n                  ? [classes.drawerItem, classes.drawerItemSelected]\r\n                  : classes.drawerItem\r\n              }\r\n              disableTypography\r\n            >\r\n              Home\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            className={\r\n              value === 1\r\n                ? [classes.drawerItem, classes.drawerItemSelected]\r\n                : classes.drawerItem\r\n            }\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(1);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/services\"\r\n            selected={value === 1}\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              Services\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            className={\r\n              value === 2\r\n                ? [classes.drawerItem, classes.drawerItemSelected]\r\n                : classes.drawerItem\r\n            }\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(2);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/revolution\"\r\n            selected={value === 2}\r\n          >\r\n            <ListItemText disableTypography>The Revolution</ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            className={\r\n              value === 3\r\n                ? [classes.drawerItem, classes.drawerItemSelected]\r\n                : classes.drawerItem\r\n            }\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(3);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/about\"\r\n            selected={value === 3}\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              About Us\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            className={\r\n              value === 4\r\n                ? [classes.drawerItem, classes.drawerItemSelected]\r\n                : classes.drawerItem\r\n            }\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(4);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/contact\"\r\n            selected={value === 4}\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              Contact Us\r\n            </ListItemText>\r\n          </ListItem> */}\r\n          <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(false);\r\n            }}\r\n            divider\r\n            button\r\n            component={Link}\r\n            classes={{\r\n              root: classes.drawerItemEstimate,\r\n              selected: classes.drawerItemSelected,\r\n            }}\r\n            to=\"/estimate\"\r\n            selected={value === 5}\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              Free Estimate\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        className={classes.drawerIconContainer}\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n      >\r\n        <MenuIcon className={classes.drawerIcon}></MenuIcon>\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElevationScroll>\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n          <Toolbar disableGutters>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              disableRipple\r\n              className={classes.logoContainer}\r\n              onClick={() => setValue(0)}\r\n            >\r\n              <img src={logo} alt=\"company logo\" className={classes.logo} />\r\n            </Button>\r\n            {matches ? drawer : tabs}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","G:\\React-zachary\\arcdevelopment\\src\\components\\ui\\Theme.js",[],{"ruleId":"27","severity":1,"message":"28","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":20},{"ruleId":"27","severity":1,"message":"31","line":11,"column":16,"nodeType":"29","messageId":"30","endLine":11,"endColumn":26},{"ruleId":"27","severity":1,"message":"32","line":11,"column":28,"nodeType":"29","messageId":"30","endLine":11,"endColumn":39},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used."]